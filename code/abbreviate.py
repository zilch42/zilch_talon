# XXX - would be nice to be able pipe these through formatters

from talon import Context, Module

mod = Module()
mod.list("abbreviation", desc="Common abbreviation")

abbreviations = {
    "administrator": "admin",
    "advance": "adv",
    "alternative": "alt",
    "arguments": "args",
    "as far as i know": "afaik",
    "attributes": "attrs",
    "authentication": "auth",
    "boolean": "bool",
    "centimeter": "cm",
    "character": "char",
    "class": "cls",
    "command": "cmd",
    "context": "ctx",
    "control": "ctrl",
    "coordinates": "coords",
    "database": "db",
    "description": "desc",
    "documents": "docs",
    "double": "dbl",
    "environment": "env",
    "escape": "esc",
    "etcetera": "etc",
    "evaluate": "eval", 
    "function": "func",
    "image": "img",
    "information": "info",
    "initialize": "init",
    "javascript": "js",
    "jason": "json",
    "kilogram": "kg",
    "kilometer": "km",
    "markdown": "md",
    "message": "msg",
    "milligram": "mg",
    "millisecond": "ms",
    "miscellaneous": "misc",
    "module": "mod",
    "number": "num",
    "object": "obj",
    "okay": "ok",
    "operating system": "os",
    "original": "orig",
    "package": "pkg",
    "parameter": "param",
    "parameters": "params",
    "pixel": "px",
    "point": "pt",
    "previous": "prev",
    "property": "prop",
    "python": "py",
    "reference": "ref",
    "references": "refs",
    "regular expression": "regex",
    "regular expressions": "regex",
    "request": "req",
    "revision": "rev",
    "source": "src",
    "specification": "spec",
    "standard": "std",
    "string": "str",
    "system": "sys",
    "table of contents": "toc",
    "table": "tbl",
    "technology": "tech",
    "temperature": "temp",
    "utilities": "utils",
    "utility": "util",
    "value": "val",
    "variable": "var",
    # custom
    "science health and excellence report": "SH&ER", 
    "ansi am i": "NCMI", 
    "a ahl": "AAHL", 
    "australian animal health lab": "AAHL", 
    "australian centre of disease preparedness": "ACDP", 
}

ctx = Context()
ctx.lists["user.abbreviation"] = abbreviations
